/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : SMCBugTracker.sm
 */

package SMCBugTracker;


public class SMCBugTrackerContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public SMCBugTrackerContext(SMCBugTracker owner)
    {
        this (owner, Main.State1);
    }

    public SMCBugTrackerContext(SMCBugTracker owner, SMCBugTrackerState initState)
    {
        super (initState);

        mOwner = owner;
    }

    @Override
    public void enterStartState()
    {
        getState().entry(this);
    }

    public void onFinish()
    {
        mTransition = "onFinish";
        getState().onFinish(this);
        mTransition = "";
    }

    public void updateProgress()
    {
        mTransition = "updateProgress";
        getState().updateProgress(this);
        mTransition = "";
    }

    public SMCBugTrackerState getState()
        throws statemap.StateUndefinedException
    {
        if (mState == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((SMCBugTrackerState) mState);
    }

    protected SMCBugTracker getOwner()
    {
        return (mOwner);
    }

    public void setOwner(SMCBugTracker owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            mOwner = owner;
        }
    }

//---------------------------------------------------------------
// Member data.
//

    private transient SMCBugTracker mOwner;

    //-----------------------------------------------------------
    // Constants.
    //

    private static final long serialVersionUID = 1L;

//---------------------------------------------------------------
// Inner classes.
//

    public static abstract class SMCBugTrackerState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected SMCBugTrackerState(String name, int id)
        {
            super (name, id);
        }

        protected void entry(SMCBugTrackerContext context) {}
        protected void exit(SMCBugTrackerContext context) {}

        protected void onFinish(SMCBugTrackerContext context)
        {
            Default(context);
        }

        protected void updateProgress(SMCBugTrackerContext context)
        {
            Default(context);
        }

        protected void Default(SMCBugTrackerContext context)
        {
            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
    // Constants.
    //

        private static final long serialVersionUID = 1L;
    }

    /* package */ static abstract class Main
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //

        public static final Main_State1 State1 =
            new Main_State1("Main.State1", 0);
        public static final Main_State2 State2 =
            new Main_State2("Main.State2", 1);
    }

    protected static class Main_Default
        extends SMCBugTrackerState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected Main_Default(String name, int id)
        {
            super (name, id);
        }

    //-----------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class Main_State1
        extends Main_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Main_State1(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(SMCBugTrackerContext context)
            {
                SMCBugTracker ctxt = context.getOwner();

            ctxt.startTimer();
        }

        @Override
        protected void exit(SMCBugTrackerContext context)
            {
            SMCBugTracker ctxt = context.getOwner();

            ctxt.endTimer();
        }

        @Override
        protected void onFinish(SMCBugTrackerContext context)
        {
            SMCBugTracker ctxt = context.getOwner();

            if (state==false)
            {
                (context.getState()).exit(context);
                context.clearState();
                try
                {
                    ctxt.test();
                }
                finally
                {
                    context.setState(Main.State2);
                    (context.getState()).entry(context);
                }

            }

            else
            {
                super.onFinish(context);
            }

        }

        @Override
        protected void updateProgress(SMCBugTrackerContext context)
        {
            SMCBugTracker ctxt = context.getOwner();

            SMCBugTrackerState endState = context.getState();
            context.clearState();
            try
            {
                ctxt.updateProgress();
            }
            finally
            {
                context.setState(endState);
            }


        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class Main_State2
        extends Main_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private Main_State2(String name, int id)
        {
            super (name, id);
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
